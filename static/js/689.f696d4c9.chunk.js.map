{"version":3,"file":"static/js/689.f696d4c9.chunk.js","mappings":"gLAMA,MAuBA,EAvB8BA,IAA2B,IAA1B,iBAAEC,GAAkBD,EACjD,MAAOE,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAOnC,OACEC,EAAAA,EAAAA,KAAA,OAAAC,UACEC,EAAAA,EAAAA,MAAA,QAAMC,SAPYC,IACpBA,EAAEC,iBACFT,EAAiBC,GACjBC,EAAS,GAAG,EAImBG,SAAA,EAC3BD,EAAAA,EAAAA,KAAA,SACEM,MAAOT,EACPU,SAAWH,GAAMN,EAASM,EAAEI,OAAOF,OACnCG,KAAK,OACLC,KAAK,WAEPV,EAAAA,EAAAA,KAAA,UAAQS,KAAK,SAAQR,SAAC,eAEpB,E,8CCjBV,MAAM,KAAEU,GAASC,EAAAA,OA0DjB,EAxDeC,KACb,MAAOC,EAAMC,IAAWhB,EAAAA,EAAAA,aACjBiB,EAAOC,IAAYlB,EAAAA,EAAAA,UAAS,KAC5BmB,EAAWC,IAAgBpB,EAAAA,EAAAA,WAAS,IACpCqB,EAAcC,IAAmBC,EAAAA,EAAAA,MAClCzB,EAAQuB,EAAaG,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,MAyBjB,OAnBAC,EAAAA,EAAAA,YAAU,KACR,IAAK7B,EAAO,OACI8B,WACdR,GAAa,GACb,IACE,MAAM,QAAES,SAAkBC,EAAAA,EAAAA,IAAehC,GAAS,IAElDkB,EAAQa,EACV,CAAE,MAAOZ,GACHA,aAAiBc,OACnBb,EAASD,EAAMe,QAEnB,CAAC,QACCZ,GAAa,EACf,GAEFa,EAAS,GACR,CAACnC,IAEAqB,GACKlB,EAAAA,EAAAA,KAAA,OAAAC,SAAK,kBAGVe,GACKhB,EAAAA,EAAAA,KAACiC,EAAAA,EAAY,CAACC,MAAOlB,KAI5Bd,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAACmC,EAAU,CAACvC,iBAjCUC,IACxBwB,EAAgBxB,EAAQ,CAAEA,SAAU,CAAC,EAAE,IAkChC,OAAJiB,QAAI,IAAJA,OAAI,EAAJA,EAAMsB,KAAKC,IAERrC,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACsC,EAAAA,GAAI,CAACC,GAAIC,OAAOH,EAAGI,IAAKC,MAAOlB,GAAQ,IAAAmB,OAAQhC,GAAOV,SACpDoC,EAAGH,SAFCG,EAAGI,QAOZ,C","sources":["components/FormMovies/FormMovies.tsx","pages/Movies/Movies.tsx"],"sourcesContent":["import React, { FC, useState } from \"react\";\n\ninterface Props {\n  handleFormSubmit: (query: string) => void;\n}\n\nconst FormMovies: FC<Props> = ({ handleFormSubmit }) => {\n  const [query, setQuery] = useState(\"\");\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    handleFormSubmit(query);\n    setQuery(\"\");\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          type=\"text\"\n          name=\"query\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n};\n\nexport default FormMovies;\n","import FormMovies from \"@/components/FormMovies/FormMovies\";\nimport { getMovieByName } from \"@/helpers/api\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\nimport { IMovies } from \"../Home/Home.types\";\nimport { ROUTES } from \"@/constants/routes/routes.constants\";\nimport { ErrorElement } from \"@/components/Error/Error\";\n\nconst { HOME } = ROUTES;\n\nconst Movies = () => {\n  const [data, setData] = useState<IMovies[]>();\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\");\n  const location = useLocation();\n\n  const handleFormSubmit = (query: string) => {\n    setSearchParams(query ? { query } : {});\n  };\n\n  useEffect(() => {\n    if (!query) return;\n    const request = async () => {\n      setIsLoading(true);\n      try {\n        const { results } = await getMovieByName(query || \"\");\n\n        setData(results);\n      } catch (error) {\n        if (error instanceof Error) {\n          setError(error.message);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    request();\n  }, [query]);\n\n  if (isLoading) {\n    return <div>Is loading...</div>;\n  }\n\n  if (error) {\n    return <ErrorElement title={error} />;\n  }\n\n  return (\n    <div>\n      <FormMovies handleFormSubmit={handleFormSubmit} />\n\n      {data?.map((el) => {\n        return (\n          <li key={el.id}>\n            <Link to={String(el.id)} state={location || `/${HOME}`}>\n              {el.title}\n            </Link>\n          </li>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["_ref","handleFormSubmit","query","setQuery","useState","_jsx","children","_jsxs","onSubmit","e","preventDefault","value","onChange","target","type","name","HOME","ROUTES","Movies","data","setData","error","setError","isLoading","setIsLoading","searchParams","setSearchParams","useSearchParams","get","location","useLocation","useEffect","async","results","getMovieByName","Error","message","request","ErrorElement","title","FormMovies","map","el","Link","to","String","id","state","concat"],"sourceRoot":""}